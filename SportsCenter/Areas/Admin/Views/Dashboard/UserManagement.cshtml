



<style>
    body {
        background: #edf1f5;
        margin-top: 20px;
    }

    .card {
        position: relative;
        display: flex;
        flex-direction: column;
        min-width: 0;
        word-wrap: break-word;
        background-color: #fff;
        background-clip: border-box;
        border: 0 solid transparent;
        border-radius: 0;
    }

    .btn-circle.btn-lg, .btn-group-lg > .btn-circle.btn {
        width: 50px;
        height: 50px;
        padding: 14px 15px;
        font-size: 18px;
        line-height: 23px;
    }

    .text-muted {
        color: #8898aa !important;
    }

    [type=button]:not(:disabled), [type=reset]:not(:disabled), [type=submit]:not(:disabled), button:not(:disabled) {
        cursor: pointer;
    }

    .btn-circle {
        border-radius: 100%;
        width: 40px;
        height: 40px;
        padding: 10px;
    }

    .user-table tbody tr .category-select {
        max-width: 150px;
        border-radius: 20px;
    }
</style>
<div class="container" id="Medit">
    <div class="row">
        <div class="col-md-1"></div>
        <div class="col-md-11">
            <div class="card">
                <div class="card-body">
                    <h5 class="card-title text-uppercase mb-0">Manage Users</h5>
                </div>
                <div class="table-responsive">
                    <table class="table no-wrap user-table mb-0">
                        <thead>
                            <tr>
                                <th scope="col" class="border-0 text-uppercase font-medium pl-4">#</th>
                                <th scope="col" class="border-0 text-uppercase font-medium">Name</th>
                                <th scope="col" class="border-0 text-uppercase font-medium">Address</th>
                                <th scope="col" class="border-0 text-uppercase font-medium">Email</th>
                                <th scope="col" class="border-0 text-uppercase font-medium">Phone</th>
                                <th scope="col" class="border-0 text-uppercase font-medium">Manage</th>
                            </tr>
                        </thead>
                        <tbody>
                            <tr>
                                <template v-for="item in Member">
                                    <td class="pl-4">{{item.id}}</td>
                                    <td>
                                        <h5 class="font-medium mb-0">{{item.name}}</h5>
                                    </td>
                                    <td>
                                        <span class="text-muted">{{item.address}}</span><br>
                                    </td>
                                    <td>
                                        <span class="text-muted">{{item.email}}</span><br>
                                    </td>
                                    <td>
                                        <span class="text-muted">{{item.phone}}</span><br>
                                    </td>
                                    <td>
                                        <button @@click="DeleteMember(item.id)" type="button" class="btn btn-outline-info btn-circle btn-lg btn-circle ml-2"><i class="fa fa-trash"></i> </button>
                                        <button type="button" class="btn btn-outline-info btn-circle btn-lg btn-circle ml-2" data-bs-toggle="modal" data-bs-target="#staticBackdrop"><i class="fa fa-edit"></i></button>
                                    </td>
                                    <!-- 修改畫面 -->
                                    <div class="modal fade" id="staticBackdrop" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-labelledby="staticBackdropLabel" aria-hidden="true">
                                        <div class="modal-dialog">
                                            <div class="modal-content">
                                                <div class="modal-header">
                                                    <h5 class="modal-title" id="staticBackdropLabel">會員資料</h5>
                                                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                                                </div>
                                                <from>
                                                    <template v-for="item in Member">
                                                        <span>姓名</span><input v-model="item.name" autocomplete="off" type="text" class="form-control" placeholder="Name">
                                                        <span>帳號</span><input v-model="item.account" autocomplete="off" type="text" class="form-control" placeholder="Name">
                                                        <span>信箱</span><input v-model="item.address" autocomplete="off" type="text" class="form-control" placeholder="address">
                                                        <span>地址</span><input v-model="item.email" autocomplete="off" type="text" class="form-control" placeholder="email">
                                                        <span>電話</span><input v-model="item.phone" autocomplete="off" type="text" class="form-control" placeholder="phone">
                                                        <div>
                                                            <span>等級</span>
                                                            <select v-model="item.role">
                                                                <option value="1">一般會員</option>
                                                                <option value="2">商業會員</option>
                                                                <option value="3">管理者</option>
                                                            </select>
                                                        </div>
                                                        <div>
                                                            <span>啟用</span>
                                                            <select v-model="item.isActive">
                                                                <option value="0">是</option>
                                                                <option value="1">否</option>
                                                            </select>
                                                        </div>
                                                        <div class="modal-footer">
                                                            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">取消</button>
                                                            <button @@click="ReviseMember(Member)" type="button" class="btn btn-primary">確認修改</button>
                                                        </div>
                                                    </template>
                                                </from>
                                            </div>
                                        </div>
                                    </div>
                                </template>
                            </tr>
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>
<script>
    let app = new Vue({
        el: "#Medit",
        data: {
            Member: [],
        },
        methods: {
            ReviseMember: function(Member) {
                console.log(Member);
                let data = {
                    IsActive: Member.isActive,
                    Role: Member.role,
                    Name: Member.name,
                    Accoun: Member.accoun,
                    Addres: Member.addres,
                    Email: Member.email,
                    Phone: Member.phone
                }
                fetch("/Api/ChangeUser", {
                    body: JSON.stringify(data),
                    headers: {
                        'content-type': 'application/json'
                    },
                    method: 'POST',
                }).then(function(response) { return response.text() })
                    .then(function(result) {
                        if (result) {
                            Swal.fire({
                                icon: 'success',
                                title: '儲存成功',
                                text: '修改完成!'
                            });
                        } else {
                            Swal.fire({
                                icon: 'error',
                                title: '發生異常',
                                text: '儲存失敗!',
                            })
                        }

                    })
            },
            DeleteMember: function(id) {
                console.log(id);
                let data = {
                    Id:id
                }
                fetch("/Api/DeleteUser", {
                    body: JSON.stringify(data),
                    headers: {
                        'content-type': 'application/json'
                    },
                    method: 'POST',
                }).then(function(response) { return response.text() })
                    .then(function(result) {
                        if (result) {
                            Swal.fire({
                                icon: 'success',
                                title: '刪除成功',
                                text: '修改完成!'
                            });
                        } else {
                            Swal.fire({
                                icon: 'error',
                                title: '發生異常',
                                text: '刪除失敗!',
                            })
                        }

                    })
            }
        },
        mounted: function() {
            let self = this;
            fetch("/api/ShowUsers")
                .then(function(response) { return response.json() })
                .then(function(result) {
                    self.Member = result.map(function(x) {
                        return x
                    })
                })
        }
    })
</script>