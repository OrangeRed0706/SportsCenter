
<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.2.2/dist/css/bootstrap.min.css" rel="stylesheet"
      integrity="sha384-Zenh87qX5JnK2Jl0vWa8Ck2rdkQ2Bzep5IDxbcnCeuOxjzrPF/et3URy9Bv1WTRi" crossorigin="anonymous">
<script src="https://cdn.jsdelivr.net/npm/vue@2.7.10/dist/vue.js"></script>
<style>
    body {
        background-color: rgb(83, 82, 82);
        color: white;
    }

    .ordertitle {
        color: aliceblue;
    }

    body td {
        color: coral;
    }

    .table {
        border: 3px solid;
        border-color: rgb(75, 53, 53);
    }

    .ordertitle {
        text-align: center;
    }

    tr td {
        text-align: center;
    }

    .delbtn {
        color: red;
    }

    .movebtn {
        background-color: rgb(214, 18, 126);
        color: rgba(240, 248, 255, 0.72);
    }

    .form {
        padding-left: 50px;
    }

    .finish {
        float: right;
        padding-right: 80px;
    }
</style>


<!-- 訂單資料表 -->
<div>
    <form action="">
        <div>
            <div class="container-fluid" id="cart">
                <div class="row">
                    <div class="col-12 ">
                        <table class="table">
                            <thead>
                                <tr class="ordertitle">
                                    <th>編號</th>
                                    <th>產品名稱</th>
                                    <th>價格</th>
                                    <th>數量</th>
                                    <th>細項總額</th>
                                    <th></th>
                                </tr>
                            </thead>
                            <div>
                            <tr v-for="(order,index) in product" :key="order.productId">
                                <td scope="row">{{order.productId}}</td>
                                <td class="product_name">{{order.productName}}</td>
                                <td class="product_price">${{order.productPrice}}</td>
                                <td class="product_count">
@*                                    <input type="button" value="-" v-on:click="decrease(order)" class="decreasebtn">
*@                                    <span>{{order.productCount}}</span>
@*                                    <input type="button" value="+" v-on:click="increase(order)" class="increasebtn">
*@                                </td>
                                <td class="product_total">${{order.productPrice*order.productCount}}</td>
                                <td class="move">
                                    <button v-on:click="move(index)" class="movebtn">刪除</button>
                                </td>
                            </tr>
                            </div>
                    </table>
                    <div class="row finish">
                        <div class="col-12">
                            <span style="font-size:x-large">總金額 :{{totalPrice}}</span>
                            <button style="font-size:x-large; background-color: cadetblue;">結帳</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div>
            <div>
                <label style="font-size:x-large;">收件人名稱 :</label>
                <input type="text" style="width:400px">
            </div>
            <div class="mt-3">
                <label style="font-size:x-large;">收件人地址 :</label>
                <input type="text" style="width:400px">
            </div>
            <div class="mt-3">
                <label style="font-size:x-large;">收件人電話 :</label>
                <input type="text" style="width:400px">
            </div>
            <div class="mt-3">
                <label style="font-size:x-large;">收件人信箱 :</label>
                <input type="text" style="width:400px">
            </div>
        </div>
    </form>
</div>





<script>
    let cart = new Vue({
        el: '#cart',
        data: {

            //product: [
            //    {
            //        Id: '1',
            //        name: 'Irving球衣',
            //        img: "/image/籃球/Kyrie Irving球衣.webp",
            //        price: '500',
            //        count: '2'
            //    },
            //    {
            //        Id: '2',
            //        name: 'LeBron James 球衣',
            //        img: "/image/籃球/Lebron James球衣.webp",
            //        price: '790',
            //        count: '3'
            //    },
            //    {
            //        Id: '3',
            //        name: 'asics 羽球鞋',
            //        img: "/image/羽球/asics 羽球鞋.webp",
            //        price: '1200',
            //        count: '1'
            //    },
            //    {
            //        Id: '4',
            //        name: 'BUTTERFLY FZD 樊振東',
            //        img: "/image/桌球/BUTTERFLY FZD 樊振東.jpg",
            //        price: '9200',
            //        count: '1'
            //    },
            //    {
            //        Id: '5',
            //        name: 'Cuetec美國進口撞球桿',
            //        img: "/image/撞球/Cuetec美國進口撞球桿.png",
            //        price: '23000',
            //        count: '1'
            //    },
            //    {
            //        Id: '6',
            //        name: 'ARTENGO護腕',
            //        img: "/image/壁球/ARTENGO護腕.jpg",
            //        price: '130',
            //        count: '1'
            //    },
            //],
            product: [],
        },
        methods: {
            getData: function () {
                let self = this;
                fetch("/api/Cart")
                    .then(function (response) { return response.json() })
                    .then(function (result) {
                        self.product = result.data
                    })
            },
            //decrease: function (order) {
            //    if (order.ProductCount > 0) {
            //        order.ProductCount--;
            //    } else {
            //        order.ProductCount = 0;
            //    }
            //},
            //increase: function (order) {
            //    if (order.ProductCount >= 0) {
            //        order.ProductCount++;
            //    }
            //},
            move: function (index) {
                console.log(this);
                this.product.splice(index, 1);
            },
        },
        computed: {
            totalPrice: function () {
                var totalPrice = 0
                for (let i = 0; i < this.product.length; i++) {
                    totalPrice += this.product[i].productCount * this.product[i].productPrice;
                }
                return totalPrice;
            }
        },
        mounted: function () {
            this.getData();
        }
    })
</script>

