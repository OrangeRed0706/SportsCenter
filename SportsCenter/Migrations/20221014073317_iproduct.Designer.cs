// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SportsCenter.Models.Table;

#nullable disable

namespace SportsCenter.Migrations
{
    [DbContext(typeof(SportsCenterDbContext))]
    [Migration("20221014073317_iproduct")]
    partial class iproduct
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("SportsCenter.Models.Table.Chat", b =>
                {
                    b.Property<int>("Chat_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Chat_Id"), 1L, 1);

                    b.Property<string>("Chat_CreateDateTime")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Chat_DislikeCount")
                        .HasColumnType("int");

                    b.Property<int>("Chat_LikeCount")
                        .HasColumnType("int");

                    b.Property<string>("Chat_Message")
                        .IsRequired()
                        .HasColumnType("nvarchar(MAX)");

                    b.Property<int>("Chat_ValidFlag")
                        .HasColumnType("int");

                    b.Property<int>("Member_Id")
                        .HasColumnType("int");

                    b.HasKey("Chat_Id");

                    b.HasIndex("Member_Id");

                    b.ToTable("Chat");
                });

            modelBuilder.Entity("SportsCenter.Models.Table.Item", b =>
                {
                    b.Property<int>("Item_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Item_Id"), 1L, 1);

                    b.Property<string>("Item_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Item_ValidFlag")
                        .HasColumnType("int");

                    b.HasKey("Item_Id");

                    b.ToTable("Item");
                });

            modelBuilder.Entity("SportsCenter.Models.Table.Location", b =>
                {
                    b.Property<int>("Location_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Location_Id"), 1L, 1);

                    b.Property<string>("Location_Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Location_Area")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Location_Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Location_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Location_Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Location_ValidFlag")
                        .HasColumnType("int");

                    b.HasKey("Location_Id");

                    b.ToTable("Location");
                });

            modelBuilder.Entity("SportsCenter.Models.Table.LocationBranch", b =>
                {
                    b.Property<int>("LocationBranch_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LocationBranch_Id"), 1L, 1);

                    b.Property<int>("Item_Id")
                        .HasColumnType("int");

                    b.Property<int>("LocationBranch_Price")
                        .HasColumnType("int");

                    b.Property<string>("LocationBranch_partition")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Location_Id")
                        .HasColumnType("int");

                    b.HasKey("LocationBranch_Id");

                    b.HasIndex("Item_Id");

                    b.HasIndex("Location_Id");

                    b.ToTable("LocationBranch");
                });

            modelBuilder.Entity("SportsCenter.Models.Table.LocationOrder", b =>
                {
                    b.Property<int>("Order_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Order_Id"), 1L, 1);

                    b.Property<string>("LocationOrder_EndDateTime")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("LocationOrder_Price")
                        .HasColumnType("int");

                    b.Property<string>("LocationOrder_StartDateTime")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Location_Id")
                        .HasColumnType("int");

                    b.Property<int>("Member_Id")
                        .HasColumnType("int");

                    b.HasKey("Order_Id");

                    b.HasIndex("Location_Id");

                    b.HasIndex("Member_Id");

                    b.ToTable("Order");
                });

            modelBuilder.Entity("SportsCenter.Models.Table.Member", b =>
                {
                    b.Property<int>("MemberId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MemberId"), 1L, 1);

                    b.Property<string>("Member_Account")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Member_Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Member_CreateTime")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Member_Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Member_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Member_Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(Max)");

                    b.Property<string>("Member_Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Member_Role")
                        .HasColumnType("int");

                    b.Property<string>("Member_Salt")
                        .HasColumnType("nvarchar(Max)");

                    b.Property<int>("Member_ValidFlag")
                        .HasColumnType("int");

                    b.Property<string>("Member_img")
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("MemberId");

                    b.ToTable("Member");
                });

            modelBuilder.Entity("SportsCenter.Models.Table.Products", b =>
                {
                    b.Property<int>("Products_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Products_Id"), 1L, 1);

                    b.Property<int>("Item_Id")
                        .HasColumnType("int");

                    b.Property<string>("Products_DateTime")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Products_Inventory")
                        .HasColumnType("int");

                    b.Property<string>("Products_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Products_Price")
                        .HasColumnType("int");

                    b.HasKey("Products_Id");

                    b.HasIndex("Item_Id");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("SportsCenter.Models.Table.ProductsCart", b =>
                {
                    b.Property<int>("ProductsCart_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductsCart_ID"), 1L, 1);

                    b.Property<int>("Member_Id")
                        .HasColumnType("int");

                    b.Property<int>("ProductsCart_Count")
                        .HasColumnType("int");

                    b.Property<int>("ProductsCart_Total")
                        .HasColumnType("int");

                    b.Property<int>("Products_Id")
                        .HasColumnType("int");

                    b.Property<string>("Products_Name")
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Products_Price")
                        .HasColumnType("int");

                    b.HasKey("ProductsCart_ID");

                    b.HasIndex("Member_Id");

                    b.HasIndex("Products_Id");

                    b.ToTable("ProductsCart");
                });

            modelBuilder.Entity("SportsCenter.Models.Table.ProductsOrder", b =>
                {
                    b.Property<int>("ProductsOrder_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductsOrder_Id"), 1L, 1);

                    b.Property<string>("Member_Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Member_Cellphone")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Member_Id")
                        .HasColumnType("int");

                    b.Property<int>("ProductsOrder_Count")
                        .HasColumnType("int");

                    b.Property<string>("ProductsOrder_DateTime")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("ProductsOrder_Total")
                        .HasColumnType("int");

                    b.Property<int>("Products_Id")
                        .HasColumnType("int");

                    b.HasKey("ProductsOrder_Id");

                    b.HasIndex("Member_Id");

                    b.HasIndex("Products_Id");

                    b.ToTable("ProductsOrder");
                });

            modelBuilder.Entity("SportsCenter.Models.Table.Chat", b =>
                {
                    b.HasOne("SportsCenter.Models.Table.Member", "Member")
                        .WithMany()
                        .HasForeignKey("Member_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Member");
                });

            modelBuilder.Entity("SportsCenter.Models.Table.LocationBranch", b =>
                {
                    b.HasOne("SportsCenter.Models.Table.Item", "Item")
                        .WithMany()
                        .HasForeignKey("Item_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SportsCenter.Models.Table.Location", "Location")
                        .WithMany()
                        .HasForeignKey("Location_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Item");

                    b.Navigation("Location");
                });

            modelBuilder.Entity("SportsCenter.Models.Table.LocationOrder", b =>
                {
                    b.HasOne("SportsCenter.Models.Table.Location", "Location")
                        .WithMany()
                        .HasForeignKey("Location_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SportsCenter.Models.Table.Member", "Member")
                        .WithMany()
                        .HasForeignKey("Member_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Location");

                    b.Navigation("Member");
                });

            modelBuilder.Entity("SportsCenter.Models.Table.Products", b =>
                {
                    b.HasOne("SportsCenter.Models.Table.Item", "Item")
                        .WithMany()
                        .HasForeignKey("Item_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Item");
                });

            modelBuilder.Entity("SportsCenter.Models.Table.ProductsCart", b =>
                {
                    b.HasOne("SportsCenter.Models.Table.Member", "Member")
                        .WithMany()
                        .HasForeignKey("Member_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SportsCenter.Models.Table.Products", "Products")
                        .WithMany()
                        .HasForeignKey("Products_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Member");

                    b.Navigation("Products");
                });

            modelBuilder.Entity("SportsCenter.Models.Table.ProductsOrder", b =>
                {
                    b.HasOne("SportsCenter.Models.Table.Member", "Member")
                        .WithMany()
                        .HasForeignKey("Member_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SportsCenter.Models.Table.Products", "Products")
                        .WithMany()
                        .HasForeignKey("Products_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Member");

                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
